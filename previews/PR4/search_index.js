var documenterSearchIndex = {"docs":
[{"location":"api/#API/Reference-1","page":"API/Reference","title":"API/Reference","text":"","category":"section"},{"location":"api/#","page":"API/Reference","title":"API/Reference","text":"For now, here is a dump of all documented functions and types.","category":"page"},{"location":"api/#Index-1","page":"API/Reference","title":"Index","text":"","category":"section"},{"location":"api/#","page":"API/Reference","title":"API/Reference","text":"","category":"page"},{"location":"api/#API/Reference-2","page":"API/Reference","title":"API/Reference","text":"","category":"section"},{"location":"api/#","page":"API/Reference","title":"API/Reference","text":"Modules = [ADI]","category":"page"},{"location":"api/#ADI.pca-Tuple{AbstractArray,AbstractArray{T,1} where T}","page":"API/Reference","title":"ADI.pca","text":"pca(cube, angles, ncomps; pratio=0.99)\n\nUse principal component analysis (PCA) to reduce data cube.\n\n\n\n\n\n","category":"method"},{"location":"api/#ADI.reconstruct","page":"API/Reference","title":"ADI.reconstruct","text":"reconstruct(::ADIDesign, weights)\n\n\n\n\n\n","category":"function"},{"location":"api/#ADI.transform-Union{Tuple{T}, Tuple{ADI.ADIDesign,AbstractArray{T,3}}} where T","page":"API/Reference","title":"ADI.transform","text":"transform(::ADIDesign, cube)\ntransform(::ADIDesign, matrix)\n\n\n\n\n\n","category":"method"},{"location":"api/#Base.reduce-Union{Tuple{T}, Tuple{ADI.ADIDesign,AbstractArray{T,3},AbstractArray{T,1} where T}} where T","page":"API/Reference","title":"Base.reduce","text":"reduce(::ADIDesign, [cube, angles]; method=median, deweight=true, fill=0)\n\nReduces an ADI Design matrix by computing the residual cube and collapsing it. The keyword arguments will be passed to HCIToolbox.collapse!. If cube and angles are provided, they will be used for calculating the residual. Otherwise, the cube and angles used to create the design will be used.\n\n\n\n\n\n","category":"method"},{"location":"#","page":"Home","title":"Home","text":"CurrentModule = ADI","category":"page"},{"location":"#ADI.jl-1","page":"Home","title":"ADI.jl","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"(Image: GitHub) (Image: Build Status) (Image: Coverage) (Image: License)","category":"page"},{"location":"#","page":"Home","title":"Home","text":"A package for angular differential imaging (ADI) along with its variants, such as reference differential imaging (RDI) and spectral differential imaging (SDI).","category":"page"},{"location":"#Installation-1","page":"Home","title":"Installation","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"From Julia enter Pkg mode","category":"page"},{"location":"#","page":"Home","title":"Home","text":"julia>]\n\n(1.3) pkg> add https://github.com/juliahci/ADI.jl","category":"page"},{"location":"#License-1","page":"Home","title":"License","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"This work is distributed under the MIT \"expat\" license. See LICENSE for more information.","category":"page"}]
}
